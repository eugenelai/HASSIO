- alias: 'Dining Lights Notification'
  trigger:
    - platform: state
      entity_id: light.dining_light
      to: 'on'
    - platform: state
      entity_id: light.dining_light
      to: 'off'
  action:
    - service: tts.amazon_polly_say
      entity_id: media_player.mpd
      data_template:
        message: <speak> <break time="1s"/>The dining light is {{ states('light.dining_light') }}</speak>

- alias: 'TV Lights Notification'
  trigger:
    - platform: state
      entity_id: light.tv_light
      to: 'on'
    - platform: state
      entity_id: light.tv_light
      to: 'off'
  action:
    - service: tts.amazon_polly_say
      entity_id: media_player.mpd
      data_template:
        message: <speak> <break time="1s"/>The TV light is {{ states('light.tv_light') }}</speak>

- alias: 'Bedroom Lights Notification'
  trigger:
    - platform: state
      entity_id: light.bedroom_light
      to: 'on'
    - platform: state
      entity_id: light.bedroom_light
      to: 'off'
  action:
    - service: tts.amazon_polly_say
      entity_id: media_player.mpd
      data_template:
        message: <speak><break time="1s"/> The bedroom light is {{ states('light.bedroom_light') }}</speak>

- alias: Startup Notification
  trigger:
    platform: homeassistant
    event: start
  action:
    - service: notify.ios_euge_iphone
      data:
        message: 'Home Asssitant has started'
    - service: tts.amazon_polly_say
      entity_id: media_player.mpd
      data_template:
        message: <speak>Hello Eugene. It's Alice. I am up and running and all systems are good to go!</speak>

- alias: Welcome home
  trigger:
    platform: state
    entity_id: device_tracker.eugeiphonenmap
    from: 'not_home'
    to: 'home'
  action:
  - service: notify.ios_euge_iphone
    data:
      message: "Welcome home Eugene."
  - service: tts.amazon_polly_say
    entity_id: media_player.mpd
    data:
      message: <speak>Welcome home Eugene.</speak>

- alias: Welcome home Helen
  trigger:
    platform: state
    entity_id: device_tracker.heleniphone
    from: 'not_home'
    to: 'home'
  action:
  - service: notify.ios_euge_iphone
    data:
      message: Helen has come home
  - service: tts.amazon_polly_say
    entity_id: media_player.mpd
    data:
      message: <speak>Welcome home Helen.</speak>

- alias: Leaving work
  trigger:
    platform: state
    entity_id: device_tracker.iphone
    from: 'work'
    to: 'away'
  action:
  - service: notify.ios_euge_iphone
    data:
      message: "Hope you smashed work today."

- alias: Daily reminder
  trigger:
    - platform: time
      at: '8:00:00'
    - platform: time
      at: '20:00:00'
  action:
  - service: notify.ios_euge_iphone
    data_template:
      title: Daily reminder
      message: |
        {% if now().strftime("%H")|int < 12 %}
        Good morning, Eugene.
        {% elif now().strftime("%H")|int < 18 %}
        Good afternoon, Eugene.
        {% else %}
        Good evening, Eugene.
        {% endif %}
        Don't forget to do take your 10 minutes to clear your head.
        {% if is_state("input_boolean.running_reminder", "0.0") %}
        I have noticed you haven't gone for your run yet this week. Don't forget to go!
        {% else %}
        You've successfully gone for your run this week! Keep it up!
        {% endif %}
  - service: persistent_notification.create
    data_template:
      title: "Daily reminder"
      message: |
        {% if now().strftime("%H")|int < 12 %}
        Good morning, Eugene. Don't forget to do take your 10 minutes to clear your head.
        {% elif now().strftime("%H")|int < 18 %}
        Good afternoon, Eugene. Don't forget to do take your 10 minutes to clear your head.
        {% else %}
        Good evening, Eugene. Don't forget to do take your 10 minutes to clear your head.
        {% endif %}
        {% if is_state("input_boolean.running_reminder", "0.0") %}
        I have noticed you haven't gone for your run yet this week. Don't forget to go!
        {% else %}
        You've successfully gone for your run this week! Keep it up!
        {% endif %}


# Natural Alarm Module
- alias: "Alarm for weekdays"
  trigger:
    - platform: time
      minutes: '/1'
      seconds: 0
  condition:
    - condition: state
      entity_id: input_boolean.alarmweekon
      state: 'on'
    - condition: state
      entity_id: input_boolean.alarmweekday
      state: 'on'
    - condition: time
      weekday:
        - mon
        - tue
        - wed
        - thu
        - fri
    - condition: template
      value_template: '{{ now().strftime("%H:%M") == states.sensor.alarm_time.state }}'
  action:
    - service: light.turn_on
      entity_id: light.bedroom_light
      data:
        transition: 600
        brightness: 255
- alias: "Alarm for weekend days"
  trigger:
    - platform: time
      minutes: '/1'
      seconds: 0
  condition:
    - condition: state
      entity_id: input_boolean.alarmweekon
      state: 'on'
    - condition: state
      entity_id: input_boolean.alarmweekday
      state: 'off'
    - condition: time
      weekday:
        - sat
        - sun
    - condition: template
      value_template: '{{ now().strftime("%H:%M") == states.sensor.alarm_time.state }}'
  action:
    service: light.turn_on
    entity_id: light.bedroom_light
    data:
      transition: 600
      brightness: 255
