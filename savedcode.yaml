

notify_engine:
  sequence:
    - service: script.notify_processing
      data_template:
        message: >-
          {{ message }}
#          {# call a Random fact about the house #}
#          {{ ([iss, moon, uv, holiday]|random)() }}
    - service: script.card_processing
      data_template:
        message: >-
          {{ message }}


###################################################################################################################
########################################### Example cURL Messages  ################################################
###################################################################################################################


curl -X GET -H "x-ha-access: <PASSWORD>" \
       -H "Content-Type: application/json" https://eugenelai.duckdns.org/api/config

 curl -X POST -H "x-ha-access: <PASSWORD>" \
       -H "Content-Type: application/json" \
       -d '{"entity_id": "light.dresser_light"}' \
       https://eugenelai.duckdns.org/api/services/switch/turn_on

curl -X POST -H "x-ha-access: <PASSWORD>" \
      -H "Content-Type: application/json" \
      -d '{"entity_id": "lock.front_door"}' \
      https://eugenelai.duckdns.org/api/services/lock/unlock


curl -H "Content-Type: application/json" -X PUT -d '{"standby":{"powerState":"standby"}}' http://192.168.0.50:8080/BeoDevice/powerManagement/standby

curl -X POST -H "x-ha-access: <PASSWORD>" \
      -H "Content-Type: application/json" \
      -d '{"entity_id": "script.restartserver"}' \
      https://eugenelai.duckdns.org/api/services/script/turn_on

###################################################################################################################
########################################### Morning Routine  ######################################################
###################################################################################################################

- alias: Morning routine
  trigger:
    platform: sun
    event: sunrise
    offset: '+01:00:00'
  condition:
    condition: state
    entity_id: group.people_location
    state: 'home'
  action:
  - service: script.speech_notify_engine
    data_template:
      speech_message: >
        {{ [
        "Good morning. The sun's coming up shortly. It's currently" + states.sensor.time.state+ ", and the temperature is" +  states.sensor.dark_sky_temperature.state  + " celcius. And is expected to be" +  states.sensor.dark_sky_summary.state ,
        "Rise and shine. It's " + states.sensor.time.state+ ". Today it is expected to be" +  states.sensor.dark_sky_summary.state  + ", and the temperature is" +  states.sensor.dark_sky_temperature.state + " celcius.",
        "Wake up now. It is" + states.sensor.time.state + ". The weather today is going to be" + states.sensor.dark_sky_summary.state + ", and the temperature is" +  states.sensor.dark_sky_temperature.state + " celcius."
        ] | random }}
  - service: light.turn_on
    entity_id: light.dresser_light

###################################################################################################################
###################################### Alarm Package ###############################################################
###################################################################################################################

# Group

alarmclock:
  name: Natural Light Alarm
  control: hidden
  entities:
    - sensor.alarm_time
    - input_number.alarmhour
    - input_number.alarmminutes
    - input_boolean.alarmweekday
    - input_boolean.alarmweekon
reminders:
  name: Reminders
  control: hidden
  entities:
    - input_boolean.running_reminder
    - automation.daily_reminder

# automation

- alias: "Alarm for weekdays"
  trigger:
    - platform: time
      minutes: '/1'
      seconds: 0
  condition:
    - condition: state
      entity_id: input_boolean.alarmweekon
      state: 'on'
    - condition: state
      entity_id: input_boolean.alarmweekday
      state: 'on'
    - condition: time
      weekday:
        - mon
        - tue
        - wed
        - thu
        - fri
    - condition: template
      value_template: '{{ now().strftime("%H:%M") == states.sensor.alarm_time.state }}'
  action:
    - service: light.turn_on
      entity_id: light.bedroom_light
      data:
        transition: 600
        brightness: 130
- alias: "Alarm for weekend days"
  trigger:
    - platform: time
      minutes: '/1'
      seconds: 0
  condition:
    - condition: state
      entity_id: input_boolean.alarmweekon
      state: 'on'
    - condition: state
      entity_id: input_boolean.alarmweekday
      state: 'off'
    - condition: time
      weekday:
        - sat
        - sun
    - condition: template
      value_template: '{{ now().strftime("%H:%M") == states.sensor.alarm_time.state }}'
  action:
    service: light.turn_on
    entity_id: light.bedroom_light
    data:
      transition: 600
      brightness: 130

#alarm
input_boolean:
  alarmweekday:
    name: Weekdays Only
    icon: mdi:calendar
  alarmweekon:
    name: Alarm active
#alarm
input_number:
  alarmhour:
    name: Hour
    icon: mdi:timer
    initial: 6
    min: 0
    max: 23
    step: 1
  alarmminutes:
    name: Minutes
    icon: mdi:timer
    initial: 30
    min: 0
    max: 59
    step: 5

#    Script
lightalarmclock:
  alias: Natural Alarm
  sequence:
    - service: light.turn_on
      data:
        entity_id: light.light.bedroom_light
        brightness: 255
        transition: 1800

###################################################################################################################
########################################### Motion Sensor #########################################################
###################################################################################################################

- alias: Motion Sensor Living Room
  trigger:
    platform: state
    entity_id: sensor.living_room_motion
    to: 'ON'
  action:
  - service: notify.ios_eugene_iphone
    data:
      message: "Motion sensor in living room has triggered!"

###################################################################################################################
########################################### Motion Sensor w/ actions ##############################################
###################################################################################################################

automation:
  - alias: Light hallway if motion 2
    trigger:
      - platform: state
        entity_id: switch.net_hallsensor
        to: 'on'
    condition: state
      entity_id: input_select.status_hallway
      state: 'Hemma'
    action:
      - service: timer.start
        entity_id: timer.timer_hallway
      - service: switch.turn_on
        entity_id: group.hallway_light
  - alias: Turn off hallway lights at end of timer
    trigger:
      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.timer_hallway
    action:
      service: switch.turn_off
      entity_id: group.hallway_light

timer:
  timer_hallway:
    duration: '00:03:00'

group:
  hallway_light:
  name: "Hallway light"
  entities:
    - switch.hall_entre
    - switch.hall_golvlampa
    - switch.hall_kladhangare

- alias: August Battery Level
  trigger:
    platform: time

    {{states.lock.front_door.attributes.battery_level}}


###################################################################################################################
###################################### iPhone Charging Package ####################################################
###################################################################################################################
- alias: 'iPhone Charging off'
  trigger:
    platform: state
    entity_id: sensor.iphonecharging
    from: 'off'
    to: 'on'
  action:
    - service: script.text_notify_engine
      data_template:
        text_message: >
          "Your iPhone is charging"

- alias: 'iPhone Charging on'
  trigger:
    platform: state
    entity_id: sensor.iphonecharging
    from: 'off'
    to: 'on'
  action:
    - service: script.text_notify_engine
      data_template:
        text_message: >
          "Your iPhone is no longing charging"

- alias: 'iPhone Charging off'
  trigger:
    platform: state
    entity_id: sensor.iphonecharging
    from: 'off'
    to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: sensor.eugene_location
        state: 'home'
      - condition: time
        after: '05:00:00'
        before: '11:00:00'
  action:
  - service: script.text_notify_engine
    data_template:
      text_message: >
        "Your iPhone is charging"
  - service: script.speech_notify_engine
    data_template:
      speech_message: >
        {{ [
        "Good morning. The sun's coming up shortly. It's currently" + states.sensor.time.state+ ", and the temperature is" +  states.sensor.dark_sky_temperature.state  + " celcius. And is expected to be" +  states.sensor.dark_sky_summary.state ,
        "Rise and shine. It's " + states.sensor.time.state+ ". Today it is expected to be" +  states.sensor.dark_sky_summary.state  + ", and the temperature is" +  states.sensor.dark_sky_temperature.state + " celcius.",
        "Wake up now. It is" + states.sensor.time.state + ". The weather today is going to be" + states.sensor.dark_sky_summary.state + ", and the temperature is" +  states.sensor.dark_sky_temperature.state + " celcius."
        ] | random }}


###################################################################################################################
############################################### Sensors ###########################################################
###################################################################################################################


- platform: command_line
 name: Smart mirror
 command: 'curl -Is http://xxx.duckdns.org:8080 | head -n 1'
 value_template: >-
   {% if value == 'HTTP/1.1 200 OK' %}
     Online
   {% else %}
     Offline
   {% endif %}

## Bitcoin Sensors

Bitcoin
- platform: bitcoin
 friendly_name: bitcoinhkd
 currency: HKD
 display_options:
   - exchangerate
- platform: bitcoin
 friendly_name: bitcoinusd
 currency: USD
 display_options:
   - exchangerate

- platform: template
 sensors:
   bcvalue:
     friendly_name: "Bitcoin Wallet"
     value_template: " HKD{{ '{0:,.0f}'.format(states('sensor.exchange_rate_1_btc') | float * 0.113) | round(0) }}"

- platform: template
 sensors:
   bcratehkd:
     friendly_name: "Bitcoin HKD"
     value_template: "HKD{{ '{0:,.0f}'.format(states('sensor.exchange_rate_1_btc') | float ) | round(0) }}"

- platform: template
 sensors:
   bcrateusd:
     friendly_name: "Bitcoin USD"
     value_template: "USD{{ '{0:,.0f}'.format(states('sensor.exchange_rate_1_btc') | float / 7.8 ) | round(0) }}"

- platform: template
 sensors:
   bcrateusd:
     friendly_name: "Bitcoin USD"
     value_template: "USD {{ '{0:,.0f}'.format((states.sensor.exchange_rate_1_btc.state) | float ) | round(0) }}"

#Customer iPhone Sensor
- platform: template
 sensors:
   euge_iphone:
     friendly_name: "Euge iPhone"
     value_template: >-
       {% if is_state('device_tracker.iphone', 'home') or is_state('device_tracker.eugeiphonenmap', 'home') or is_state('device_tracker.euge_iphone', 'home') %}
         Home
       {% else %}
         Away
       {% endif %}



- platform: template
  sensors:
    since_last_boot_templated:
      friendly_name: RPi Uptime
      value_template: >-
        {%- set slb = states.sensor.since_last_boot.state.split(' ') -%}
        {%- set count = slb | length -%}
        {%- set hms = slb[count - 1] -%}
        {%- set hms_trimmed = hms.split('.')[0] -%}
        {%- set hms_split = hms_trimmed.split(':') -%}
        {%- set hours = hms_split[0] | int -%}

        {%- if count == 3 -%}
          {{ slb[0] ~ ' ' ~ slb[1] ~ ' ' }}
        {%- endif -%}
        {%- if hours > 0 -%}
          {%- if hours == 1 -%}
            1 hour
          {%- else -%}
            {{ hours }} hours
          {%- endif -%}
        {%- endif -%}
